{"ast":null,"code":"// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\")\n    // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"./searchcursor\"), require(\"../scroll/annotatescrollbar\"));else if (typeof define == \"function\" && define.amd)\n    // AMD\n    define([\"../../lib/codemirror\", \"./searchcursor\", \"../scroll/annotatescrollbar\"], mod);else\n    // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineExtension(\"showMatchesOnScrollbar\", function (query, caseFold, options) {\n    if (typeof options == \"string\") options = {\n      className: options\n    };\n    if (!options) options = {};\n    return new SearchAnnotation(this, query, caseFold, options);\n  });\n  function SearchAnnotation(cm, query, caseFold, options) {\n    this.cm = cm;\n    this.options = options;\n    var annotateOptions = {\n      listenForChanges: false\n    };\n    for (var prop in options) annotateOptions[prop] = options[prop];\n    if (!annotateOptions.className) annotateOptions.className = \"CodeMirror-search-match\";\n    this.annotation = cm.annotateScrollbar(annotateOptions);\n    this.query = query;\n    this.caseFold = caseFold;\n    this.gap = {\n      from: cm.firstLine(),\n      to: cm.lastLine() + 1\n    };\n    this.matches = [];\n    this.update = null;\n    this.findMatches();\n    this.annotation.update(this.matches);\n    var self = this;\n    cm.on(\"change\", this.changeHandler = function (_cm, change) {\n      self.onChange(change);\n    });\n  }\n  var MAX_MATCHES = 1000;\n  SearchAnnotation.prototype.findMatches = function () {\n    if (!this.gap) return;\n    for (var i = 0; i < this.matches.length; i++) {\n      var match = this.matches[i];\n      if (match.from.line >= this.gap.to) break;\n      if (match.to.line >= this.gap.from) this.matches.splice(i--, 1);\n    }\n    var cursor = this.cm.getSearchCursor(this.query, CodeMirror.Pos(this.gap.from, 0), {\n      caseFold: this.caseFold,\n      multiline: this.options.multiline\n    });\n    var maxMatches = this.options && this.options.maxMatches || MAX_MATCHES;\n    while (cursor.findNext()) {\n      var match = {\n        from: cursor.from(),\n        to: cursor.to()\n      };\n      if (match.from.line >= this.gap.to) break;\n      this.matches.splice(i++, 0, match);\n      if (this.matches.length > maxMatches) break;\n    }\n    this.gap = null;\n  };\n  function offsetLine(line, changeStart, sizeChange) {\n    if (line <= changeStart) return line;\n    return Math.max(changeStart, line + sizeChange);\n  }\n  SearchAnnotation.prototype.onChange = function (change) {\n    var startLine = change.from.line;\n    var endLine = CodeMirror.changeEnd(change).line;\n    var sizeChange = endLine - change.to.line;\n    if (this.gap) {\n      this.gap.from = Math.min(offsetLine(this.gap.from, startLine, sizeChange), change.from.line);\n      this.gap.to = Math.max(offsetLine(this.gap.to, startLine, sizeChange), change.from.line);\n    } else {\n      this.gap = {\n        from: change.from.line,\n        to: endLine + 1\n      };\n    }\n    if (sizeChange) for (var i = 0; i < this.matches.length; i++) {\n      var match = this.matches[i];\n      var newFrom = offsetLine(match.from.line, startLine, sizeChange);\n      if (newFrom != match.from.line) match.from = CodeMirror.Pos(newFrom, match.from.ch);\n      var newTo = offsetLine(match.to.line, startLine, sizeChange);\n      if (newTo != match.to.line) match.to = CodeMirror.Pos(newTo, match.to.ch);\n    }\n    clearTimeout(this.update);\n    var self = this;\n    this.update = setTimeout(function () {\n      self.updateAfterChange();\n    }, 250);\n  };\n  SearchAnnotation.prototype.updateAfterChange = function () {\n    this.findMatches();\n    this.annotation.update(this.matches);\n  };\n  SearchAnnotation.prototype.clear = function () {\n    this.cm.off(\"change\", this.changeHandler);\n    this.annotation.clear();\n  };\n});","map":{"version":3,"names":["mod","exports","module","require","define","amd","CodeMirror","defineExtension","query","caseFold","options","className","SearchAnnotation","cm","annotateOptions","listenForChanges","prop","annotation","annotateScrollbar","gap","from","firstLine","to","lastLine","matches","update","findMatches","self","on","changeHandler","_cm","change","onChange","MAX_MATCHES","prototype","i","length","match","line","splice","cursor","getSearchCursor","Pos","multiline","maxMatches","findNext","offsetLine","changeStart","sizeChange","Math","max","startLine","endLine","changeEnd","min","newFrom","ch","newTo","clearTimeout","setTimeout","updateAfterChange","clear","off"],"sources":["D:/桌面/FYP/本地git仓库/react-sidebar-v1/node_modules/codemirror/addon/search/matchesonscrollbar.js"],"sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"./searchcursor\"), require(\"../scroll/annotatescrollbar\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"./searchcursor\", \"../scroll/annotatescrollbar\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineExtension(\"showMatchesOnScrollbar\", function(query, caseFold, options) {\n    if (typeof options == \"string\") options = {className: options};\n    if (!options) options = {};\n    return new SearchAnnotation(this, query, caseFold, options);\n  });\n\n  function SearchAnnotation(cm, query, caseFold, options) {\n    this.cm = cm;\n    this.options = options;\n    var annotateOptions = {listenForChanges: false};\n    for (var prop in options) annotateOptions[prop] = options[prop];\n    if (!annotateOptions.className) annotateOptions.className = \"CodeMirror-search-match\";\n    this.annotation = cm.annotateScrollbar(annotateOptions);\n    this.query = query;\n    this.caseFold = caseFold;\n    this.gap = {from: cm.firstLine(), to: cm.lastLine() + 1};\n    this.matches = [];\n    this.update = null;\n\n    this.findMatches();\n    this.annotation.update(this.matches);\n\n    var self = this;\n    cm.on(\"change\", this.changeHandler = function(_cm, change) { self.onChange(change); });\n  }\n\n  var MAX_MATCHES = 1000;\n\n  SearchAnnotation.prototype.findMatches = function() {\n    if (!this.gap) return;\n    for (var i = 0; i < this.matches.length; i++) {\n      var match = this.matches[i];\n      if (match.from.line >= this.gap.to) break;\n      if (match.to.line >= this.gap.from) this.matches.splice(i--, 1);\n    }\n    var cursor = this.cm.getSearchCursor(this.query, CodeMirror.Pos(this.gap.from, 0), {caseFold: this.caseFold, multiline: this.options.multiline});\n    var maxMatches = this.options && this.options.maxMatches || MAX_MATCHES;\n    while (cursor.findNext()) {\n      var match = {from: cursor.from(), to: cursor.to()};\n      if (match.from.line >= this.gap.to) break;\n      this.matches.splice(i++, 0, match);\n      if (this.matches.length > maxMatches) break;\n    }\n    this.gap = null;\n  };\n\n  function offsetLine(line, changeStart, sizeChange) {\n    if (line <= changeStart) return line;\n    return Math.max(changeStart, line + sizeChange);\n  }\n\n  SearchAnnotation.prototype.onChange = function(change) {\n    var startLine = change.from.line;\n    var endLine = CodeMirror.changeEnd(change).line;\n    var sizeChange = endLine - change.to.line;\n    if (this.gap) {\n      this.gap.from = Math.min(offsetLine(this.gap.from, startLine, sizeChange), change.from.line);\n      this.gap.to = Math.max(offsetLine(this.gap.to, startLine, sizeChange), change.from.line);\n    } else {\n      this.gap = {from: change.from.line, to: endLine + 1};\n    }\n\n    if (sizeChange) for (var i = 0; i < this.matches.length; i++) {\n      var match = this.matches[i];\n      var newFrom = offsetLine(match.from.line, startLine, sizeChange);\n      if (newFrom != match.from.line) match.from = CodeMirror.Pos(newFrom, match.from.ch);\n      var newTo = offsetLine(match.to.line, startLine, sizeChange);\n      if (newTo != match.to.line) match.to = CodeMirror.Pos(newTo, match.to.ch);\n    }\n    clearTimeout(this.update);\n    var self = this;\n    this.update = setTimeout(function() { self.updateAfterChange(); }, 250);\n  };\n\n  SearchAnnotation.prototype.updateAfterChange = function() {\n    this.findMatches();\n    this.annotation.update(this.matches);\n  };\n\n  SearchAnnotation.prototype.clear = function() {\n    this.cm.off(\"change\", this.changeHandler);\n    this.annotation.clear();\n  };\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}